package com.example.mainpage.fragment;import android.Manifest;import android.content.Intent;import androidx.annotation.Nullable;import androidx.core.app.ActivityCompat;import androidx.fragment.app.Fragment;import androidx.viewpager.widget.ViewPager;import android.content.pm.PackageManager;import android.os.Bundle;import android.view.View;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.example.mainpage.R;import com.example.mainpage.RegionActivity;import com.example.mainpage.ResultOfSaoActivity;import com.example.mainpage.SearchActivity;import com.example.mainpage.adapter.HomeAdapter;import com.flyco.tablayout.SlidingTabLayout;import com.yzq.zxinglibrary.android.CaptureActivity;import com.yzq.zxinglibrary.bean.ZxingConfig;import com.yzq.zxinglibrary.common.Constant;import java.util.ArrayList;import static android.app.Activity.RESULT_OK;public class HomeFragment extends BaseFragment {    public static final int LOCATION_PERMISSION_REQUEST_CODE = 200;    private ArrayList<Fragment> mFragments = new ArrayList<>();    private String[] mTitles = {"推荐", "专区"};    private ViewPager mViewPager;    private SlidingTabLayout mSlidingTabLayout;    private TextView editText;    private LinearLayout search;    private TextView mTvRegion;    private ImageView ivSao;    public HomeFragment() {        // Required empty public constructor    }    public static HomeFragment newInstance() {        HomeFragment fragment = new HomeFragment();        return fragment;    }    @Override    protected int initLayout() {        return R.layout.fragment_home;    }    @Override    protected void initView(final View v) {        editText = (TextView) v.findViewById(R.id.editText);        search = (LinearLayout) v.findViewById(R.id.search);        mTvRegion = (TextView) v.findViewById(R.id.tv_region);        mSlidingTabLayout = (SlidingTabLayout) v.findViewById(R.id.slidingTabLayout);        mViewPager = v.findViewById(R.id.fixedViewPager);        mFragments.add(new RecommendationFragment());        mFragments.add(new SpecialAreaFragment());        mViewPager.setOffscreenPageLimit(mFragments.size());        mViewPager.setAdapter(new HomeAdapter(getFragmentManager(), mTitles, mFragments));        mSlidingTabLayout.setViewPager(mViewPager);        search.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(getActivity(), SearchActivity.class);                startActivity(intent);            }        });        mTvRegion.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(getActivity(), RegionActivity.class);                startActivityForResult(intent, 0);            }        });        ivSao = v.findViewById(R.id.iv_sao);        ivSao.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                sao(v);            }        });    }    @Override    protected void initData() {    }    public void setTextViewRegion(String s) {        mTvRegion.setText(s);    }    @Override    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (data != null) {            String s = data.getExtras().getString("region");            if (!("".equals(s)) && s != null) {                setTextViewRegion(data.getExtras().getString("region"));            }        }        // 扫描二维码/条码回传        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE && resultCode == RESULT_OK) {            if (data != null) {                String content = data.getStringExtra(Constant.CODED_CONTENT);                //创建用于封装数据的Bundle对象                Bundle bundle = new Bundle();                bundle.putString("result",content);                Intent intent = new Intent(getActivity(), ResultOfSaoActivity.class);               //将Bundle对象嵌入Intent中                intent.putExtras(bundle);                startActivity(intent);            }        }    }    public void sao(View view) {        // 动态申请权限的代码，应当放在 Activity 的 onCreate(), onStart(), onResume()方法中        if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED                || ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.CAMERA,                    Manifest.permission.READ_EXTERNAL_STORAGE}, LOCATION_PERMISSION_REQUEST_CODE);        }        Intent intent = new Intent(getActivity(), CaptureActivity.class);        /*ZxingConfig是配置类         *可以设置是否显示底部布局，闪光灯，相册，         * 是否播放提示音  震动         * 设置扫描框颜色等         * 也可以不传这个参数         * */        ZxingConfig config = new ZxingConfig();        config.setPlayBeep(true);//是否播放扫描声音 默认为true        config.setShake(true);//是否震动  默认为true        config.setDecodeBarCode(true);//是否扫描条形码 默认为true        config.setReactColor(R.color.colorAccent);//设置扫描框四个角的颜色 默认为白色        config.setFrameLineColor(R.color.colorAccent);//设置扫描框边框颜色 默认无色        config.setScanLineColor(R.color.colorAccent);//设置扫描线的颜色 默认白色        config.setFullScreenScan(false);//是否全屏扫描  默认为true  设为false则只会在扫描框中扫描        intent.putExtra(Constant.INTENT_ZXING_CONFIG, config);        startActivityForResult(intent, LOCATION_PERMISSION_REQUEST_CODE);    }}